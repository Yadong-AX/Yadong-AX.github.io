<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>&lt;最终的选择&gt;</title>
      <link href="/2022/02/11/2022.2.11/"/>
      <url>/2022/02/11/2022.2.11/</url>
      
        <content type="html"><![CDATA[<h2 id="《最后》"><a href="#《最后》" class="headerlink" title="《最后》"></a>《最后》</h2><p>今天是一个<br>悲伤的日子<br>当我发现我自己不适合<br>做一个算法工程师<br>今天也是一个<br>开心的日子<br>当我发现我自己适合<br>做一个默默无闻的公务员</p><p>你赵某东什么的也在搞算法<br>他搞的了吗<br>搞不了<br>没这个能力知道吧</p><p>我想做自己想做的事<br>爬完那个一直没去爬的山<br>有自己的时间和经历<br>去享受其余人创造的<br>宝贵的人类财富<br>或许我一方面是奉献</p><p>一方面是 挥霍</p>]]></content>
      
      
      <categories>
          
          <category> POEM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;2022.2.5&gt;</title>
      <link href="/2022/02/05/2022.2.5/"/>
      <url>/2022/02/05/2022.2.5/</url>
      
        <content type="html"><![CDATA[<h2 id="《四海》"><a href="#《四海》" class="headerlink" title="《四海》"></a>《四海》</h2><p>岛上的人们如同我们一般<br>在大山的深处生活<br>只是海边充满着自由 浪漫<br>而山下多 贫穷 不堪<br>其实很多人<br>上大学前都没有离开过家乡<br>在一个小城镇度过十多年的人生。</p><p>南澳的小岛比四川的凉山更加幸运<br>它有出现在文艺导演镜头前的机会<br>虽然当地的民众生活依旧艰难<br>但是却也成为无数追求自由青春的旅客<br>梦想的地方。</p><p>无论是小岛上 大山中<br>都有像阿耀和欢颂一般<br>干净但无用的人<br>可能他们初中都没毕业<br>凭借着一腔热血和最原始的<br>真挚的情感 生活<br>而这也成为那些大城市里<br>受过高等教育的人 的诟病所在</p><p>很多人不能理解为什么有人十几岁还<br>像一个被青春重伤的患者<br>用青春伤痛文学这个标签<br>抹杀没文化的人的价值与追求<br>然后站在现实的塔顶<br>俯视他自以为的 比自己低一级的生物<br>他们并不知道哪怕是当今的时代<br>仍旧有孩子年少辍学<br>仍旧有地方教育缺失<br>仍旧有家庭矛盾不断<br>仍旧有现实比电影更加梦幻。</p><p>我曾路过<br>有亲兄弟为了田地 楼房 撕破脸皮甚至大打出手<br>我曾在理发店<br>听老板说刚走的姑娘因为智力问题十八岁出嫁只为为男方生育<br>即便过几天结婚 今天也只能花一百多块为头发软化<br>我在我家的饭店中见过形形色色的人<br>为爱情痛饮的黄发男孩<br>为友情豪饮的一众浪客<br>为面子吹牛的中年大叔<br>为办事心事重重的有志青年<br>黑河的深山中有人尸体腐烂<br>南京的新街口有人一晚上万<br>谁能否认这些于客观本该存在但于主观又不该存在的存在？</p><p>南澳岛的微风吹不了多久<br>岛上的人也终将离开<br>圣光照不到的地方不要总是曲解成黑暗<br>有人的多愁善感网上的战士总爱管。</p><p>四海不是只有北上广深<br>中国不全是高谈阔论<br>让一些底层的蝼蚁发声<br>影响不了你们那自视甚高的灵魂。</p>]]></content>
      
      
      <categories>
          
          <category> POEM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;2022.2.3&gt;</title>
      <link href="/2022/02/03/%E3%80%8A2022.2.3%E3%80%8B/"/>
      <url>/2022/02/03/%E3%80%8A2022.2.3%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="《TIME》"><a href="#《TIME》" class="headerlink" title="《TIME》"></a>《TIME》</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">我听见你的声音</span><br><span class="line">在山谷中</span><br><span class="line">交织进四季</span><br><span class="line">某一刻</span><br><span class="line">冰雪融化</span><br><span class="line">所有属于你我的音符</span><br><span class="line">在天空跳动</span><br><span class="line">我以为你爱过世界和我</span><br><span class="line">没曾想</span><br><span class="line">你只是在意生活的片刻</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> POEM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT-TWO</title>
      <link href="/2022/01/16/pat-two/"/>
      <url>/2022/01/16/pat-two/</url>
      
        <content type="html"><![CDATA[<p>一天一道PAT，今天让我们继续。</p><h2 id="Sort-of-Grade"><a href="#Sort-of-Grade" class="headerlink" title="Sort of Grade"></a>Sort of Grade</h2><p>问题描述： 读入 n（&gt;0）名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>每个测试输入包含 1 个测试用例，格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;第 1 行：正整数 n</span></span><br><span class="line"><span class="string">第 2 行：第 1 个学生的姓名 学号 成绩</span></span><br><span class="line"><span class="string">第 3 行：第 2 个学生的姓名 学号 成绩</span></span><br><span class="line"><span class="string">  ... ... ...</span></span><br><span class="line"><span class="string">第 n+1 行：第 n 个学生的姓名 学号 成绩&quot;</span></span><br></pre></td></tr></table></figure><p>其中姓名和学号均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。&quot;</span></span><br></pre></td></tr></table></figure><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;3</span></span><br><span class="line"><span class="string">Joe Math990112 89</span></span><br><span class="line"><span class="string">Mike CS991301 100</span></span><br><span class="line"><span class="string">Mary EE990830 95&quot;</span></span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;Mike CS991301</span></span><br><span class="line"><span class="string">Joe Math990112&quot;</span></span><br></pre></td></tr></table></figure><h3 id="My-Code"><a href="#My-Code" class="headerlink" title="My Code"></a>My Code</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;#include&lt;iostream&gt;</span></span><br><span class="line"><span class="string">#include&lt;string.h&gt;</span></span><br><span class="line"><span class="string">using namespace std;</span></span><br><span class="line"><span class="string">typedef struct Node</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int grade;</span></span><br><span class="line"><span class="string">    string name;</span></span><br><span class="line"><span class="string">    string num;</span></span><br><span class="line"><span class="string">&#125;Node;</span></span><br><span class="line"><span class="string">int main()</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int n;</span></span><br><span class="line"><span class="string">    int k=0;</span></span><br><span class="line"><span class="string">    int grade;</span></span><br><span class="line"><span class="string">    string str_num,str_name;</span></span><br><span class="line"><span class="string">    cin&gt;&gt;n;</span></span><br><span class="line"><span class="string">    Node node[n];</span></span><br><span class="line"><span class="string">    int i,j;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;n;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        cin&gt;&gt;str_name&gt;&gt;str_num&gt;&gt;grade;</span></span><br><span class="line"><span class="string">        node[i].name=str_name;</span></span><br><span class="line"><span class="string">        node[i].num=str_num;</span></span><br><span class="line"><span class="string">        node[i].grade=grade;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    int max=node[0].grade;</span></span><br><span class="line"><span class="string">    for(i=1;i&lt;n;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        if(node[i].grade&gt;max)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            max=node[i].grade;</span></span><br><span class="line"><span class="string">            k=i;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    cout&lt;&lt;node[k].name&lt;&lt;&quot;</span> <span class="string">&quot;&lt;&lt;node[k].num&lt;&lt;endl;</span></span><br><span class="line"><span class="string">      int min=node[0].grade;</span></span><br><span class="line"><span class="string">    k=0;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;n;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">        if(node[i].grade&lt;min)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            min=node[i].grade;</span></span><br><span class="line"><span class="string">            k=i;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    cout&lt;&lt;node[k].name&lt;&lt;&quot;</span> <span class="string">&quot;&lt;&lt;node[k].num;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT-ONE</title>
      <link href="/2022/01/16/pat-one/"/>
      <url>/2022/01/16/pat-one/</url>
      
        <content type="html"><![CDATA[<h2 id="Callatz猜想"><a href="#Callatz猜想" class="headerlink" title="Callatz猜想"></a>Callatz猜想</h2><pre><code> 问题描述：当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 n=3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 n 不能被数列中的其他数字所覆盖。 现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</code></pre><h3 id="最优解"><a href="#最优解" class="headerlink" title="最优解"></a>最优解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;</span></span><br><span class="line"><span class="string">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="string">#include&lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">using namespace std;</span></span><br><span class="line"><span class="string">typedef struct Node</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int data;</span></span><br><span class="line"><span class="string">    int key;</span></span><br><span class="line"><span class="string">&#125;Node;</span></span><br><span class="line"><span class="string">int main()</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int k;</span></span><br><span class="line"><span class="string">    cin&gt;&gt;k;</span></span><br><span class="line"><span class="string">    Node node[k];</span></span><br><span class="line"><span class="string">    //int a[k];</span></span><br><span class="line"><span class="string">    int i,j;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;k;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        cin&gt;&gt;node[i].data;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //for(i=0;i&lt;k;i++)</span></span><br><span class="line"><span class="string">    //&#123;</span></span><br><span class="line"><span class="string">      //  cout&lt;&lt;node[i].data;</span></span><br><span class="line"><span class="string">   // &#125;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;node[2].data&lt;&lt;&quot;</span>osd1<span class="string">&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;k;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        node[i].key=0; //初始化 </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;node[3].key&lt;&lt;&quot;</span>s1df2<span class="string">&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    int n; //计数 是否一次都没有被覆盖过</span></span><br><span class="line"><span class="string">    int m; //记录关键字下标</span></span><br><span class="line"><span class="string">    int star;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;k;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        star=node[i].data;</span></span><br><span class="line"><span class="string">      while(star!=1)</span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">          </span></span><br><span class="line"><span class="string">            if(star%2==0)</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                star=star/2;</span></span><br><span class="line"><span class="string">                for(j=0;j&lt;k;j++)</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    if(i!=j&amp;&amp;star==node[j].data)</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        node[j].key=1;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          else</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">             star=star*3+1; </span></span><br><span class="line"><span class="string">             star=star/2;</span></span><br><span class="line"><span class="string">               for(j=0;j&lt;k;j++)</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    if(i!=j&amp;&amp;star==node[j].data)</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        node[j].key=1;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;node[3].key&lt;&lt;&quot;</span>wos<span class="string">&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    int tag=0;  //记录一下关键字个数</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;k;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        if(node[i].key==0)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            tag=tag+1;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;tag&lt;&lt;&quot;</span>woshisha<span class="string">&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    int b[tag];</span></span><br><span class="line"><span class="string">    int temp;</span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;tag;)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        for(j=0;j&lt;k;j++)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            if(node[j].key==0)</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                b[i]=node[j].data;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;*/</span></span><br><span class="line"><span class="string">    for(i=0,j=0;i&lt;k,j&lt;tag;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        if(node[i].key==0)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            b[j]=node[i].data;</span></span><br><span class="line"><span class="string">            j=j+1;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;tag-1;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        for(j=i+1;j&lt;tag;j++)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            if(b[j]&gt;b[i])</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                temp=b[j];</span></span><br><span class="line"><span class="string">                b[j]=b[i];</span></span><br><span class="line"><span class="string">                b[i]=temp;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    for(i=0;i&lt;tag-1;i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        cout&lt;&lt;b[i]&lt;&lt;&quot;</span> <span class="string">&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    cout&lt;&lt;b[tag-1];</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/15/hello-world/"/>
      <url>/2022/01/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> start </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黎明 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
